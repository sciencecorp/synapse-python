name: build

on:
  workflow_call:
    inputs:
      registry-name:
        description: "Name of the registry (e.g., pypi, testpypi)"
        required: true
        type: string
      registry-url:
        description: "URL of the registry"
        required: true
        type: string
      package-url:
        description: "URL of the package"
        required: true
        type: string
      python-version:
        description: "Python version to build with"
        required: false
        type: string
        default: "3.11"
      registry-token:
        description: "Token for registry authentication"
        required: true
        type: string
jobs:
  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Prep repo
        run: |
          pip install -r requirements.txt
          make

      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to ${{ inputs.registry-name }}
    needs: [sdist]
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.registry-name }}
      url: ${{ inputs.package-url }}
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: List files
        run: ls -la dist/

      - name: Publish package distributions to ${{ inputs.registry-name }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ inputs.registry-url }}
          verbose: true
          # tokens are needed in reusable workflows (trusted publishing does not support reusable workflows)
          #  https://github.com/pypa/gh-action-pypi-publish/blob/db8f07d3871a0a180efa06b95d467625c19d5d5f/README.md
          password: ${{ secrets.registry-token }}
